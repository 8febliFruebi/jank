<program> = atom*
<atom> = string / number / boolean /
         generic-specialization /
         identifier / keyword /
         lambda-definition /
         macro-definition /
         binding-definition /
         if-statement /
         do-statement /
         function-call

integer = #'[+-]?\d+'
real = #'[+-]?\d+\.\d*'
<number> = (integer | real)

<double-quote> = '\"'
<not-double-quote> = #'[^\"]*'
string = <double-quote> not-double-quote <double-quote>

identifier = #'[^\s"\'()\d][^\s"\'()]*'
keyword = <':'> identifier

boolean = 'true' | 'false'

<left-paren> = <'('>
<right-paren> = <')'>
list = left-paren atom* right-paren

<lambda-keyword> = <'lambda'> | <'Î»'>
argument-list = list
<return-list> = list
lambda-definition =
  left-paren lambda-keyword argument-list return-list
    atom*
  right-paren

generic-specialization = <':'> list
function-call =
  left-paren identifier generic-specialization?
    atom*
  right-paren

<macro-keyword> = <'macro'>
<generic-list> = list
macro-definition =
  left-paren macro-keyword identifier generic-list argument-list
    atom*
  right-paren

<bind-keyword> = <'bind'>
binding-definition = left-paren bind-keyword identifier atom right-paren

<if-keyword> = <'if'>
condition = atom
then = atom
else = atom
if-statement = left-paren if-keyword condition
                 then
                 else?
               right-paren

<do-keyword> = <'do'>
do-statement = left-paren do-keyword
                 atom+
               right-paren
