<program> = atom*
<atom> = regex / string / number / boolean / set / map / vector /
         qualified-keyword / keyword / identifier /
         binding-definition /
         fn-definition /
         application / ns-definition

<left-paren> = <'('>
<right-paren> = <')'>
<left-bracket> = <'['>
<right-bracket> = <']'>
<left-curly> = <'{'>
<right-curly> = <'}'>

special-identifier = def-keyword | fn-keyword | ns-keyword

integer = #'[+-]?\d+'
real = #'[+-]?\d+\.\d*'
<number> = (integer | real)

<double-quote> = '\"'
string = <double-quote> #'(?:[^"\\]|\\.)*' <double-quote>

regex = <'#'> <double-quote> #'(?:[^"\\]|\\.)*' <double-quote>

<identifier-text> = #'[^\s"()\[\]{}\d:/\.#][^\s"()\[\]{}/\.#]*'
identifier = identifier-text
<symbol-text> = #'[^\s"()\[\]{}\d:/#][^\s"()\[\]{}/#]*'
symbol = symbol-text
<keyword-text> = #'[^\s"()\[\]{}/:]+'
qualified-keyword = #'::?' keyword-text '/' keyword-text
keyword = #'::?' keyword-text

boolean = 'true' | 'false'

map = left-curly atom* right-curly
set = <'#'> left-curly atom* right-curly
vector = left-bracket atom* right-bracket

<def-keyword> = <'def'>
binding-definition = left-paren def-keyword identifier atom right-paren

<fn-keyword> = <'fn'>
argument-list = left-bracket identifier* right-bracket
fn-definition =
  left-paren fn-keyword identifier? argument-list
    atom*
  right-paren

application =
  left-paren !special-identifier
    atom+
  right-paren

<ns-keyword> = <'ns'>
ns-require-list =
  left-paren <':require'>
    (ns-require | ns-nested-require)*
  right-paren
ns-require =
  left-bracket
    symbol (ns-require-alias | ns-require-refer)*
  right-bracket
ns-nested-require =
  left-bracket
    symbol
    ns-require+
  right-bracket
ns-require-alias = <':as'> symbol
<ns-require-refer> = <':refer'> left-bracket identifier* right-bracket
ns-definition =
  left-paren ns-keyword symbol
    ns-require-list*
  right-paren
