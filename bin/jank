#!/usr/bin/env bash

set -euo pipefail

if [ ! $# -eq 2 ];
then
  echo "usage: $0 <jank source> <output binary>"
  exit 1
fi

here="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
output_hpp=jank-generated.hpp

cxx=${CXX:-c++}
release_opts="-Ofast -march=native -fwhole-program -flto"
profile_opts="$release_opts -g -fno-omit-frame-pointer"
debug_opts="-g -Og"

pushd $here/.. > /dev/null
  echo "Compiling to C++..."
  rm -f "$output_hpp"
  lein run $1 > "jank-generated.hpp" 2>&1
  echo "Formatting C++..."
  clang-format -i "$output_hpp"
  ret=$?
  if [ $ret -eq 0 ];
  then
    echo "Compiling to binary..."
    $cxx $profile_opts -std=c++17 -o $2 \
      -I$here/../backend/neo-c++/include \
      -I$here/../lib/immer \
      -I$here/../lib/bdwgc/install/usr/local/include \
      -I$PWD \
      -L$here/../lib/bdwgc/install/usr/local/lib \
      $here/../backend/neo-c++/src/main.cpp \
      $here/../backend/neo-c++/src/prelude/object.cpp \
      $here/../backend/neo-c++/src/prelude/number.cpp \
      $here/../backend/neo-c++/src/prelude/seq.cpp \
      $here/../backend/neo-c++/src/prelude/fn.cpp \
      -lgc
  else
    cat "$output_hpp"
  fi
popd > /dev/null

exit $ret
