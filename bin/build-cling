#!/usr/bin/env bash

set -xeuo pipefail

cpt=
cling_dir="${1:-./cling-build}"
cling_branch=v0.8
llvm_release=release_50

# Linux needs Cling 0.8, but it fails to work on macOS, running into lots of
# runtime JIT compilation issues regarding libc++. Fortunately, Cling master
# works on macOS, so we'll just go with that for now.
if [[ "${OSTYPE:?}" == "darwin"* ]]
then
  cling_branch=master
  llvm_release=release_90
fi

# Ensure cling_dir is absolute.
case "${cling_dir}" in
  /*)
    ;;
  *)
    cling_dir="${PWD}/${cling_dir}"
    ;;
esac

function fetch_cpt
{
  local tmp
  tmp="$(mktemp)"
  curl -s -o "${tmp}" https://raw.githubusercontent.com/jeaye/root-cling/jank/tools/packaging/cpt.py
  chmod +x "${tmp}"
  cpt="${tmp}"
}

function build_cling
{
  "${cpt}" -y \
           --create-dev-env=Release \
           --with-workdir="${cling_dir}" \
           --allow-dirty \
           --with-cling-branch="${cling_branch}" \
           --with-llvm-release="${llvm_release}" \
           --no-test

  # With Cling 0.8 (not with master), Cling's CMake files don't work when compiling from
  # another CMake project. In particular, ClingConfig.cmake tries to include
  # ClingTargets.cmake, but it does so using ${CMAKE_CURRENT_LIST_DIR}, which Cling thinks should
  # be Cling's root, but it's actually jank's. We fix this up by pointing it at the right place,
  # but this seems to have an impact on CLING_INCLUDE_DIRS being set, so you'll see we set that
  # manually as well. Wasn't an issue on Cling master, but we're stuck on 0.8 until this is fixed:
  # https://github.com/root-project/cling/issues/470
  if [[ "${cling_branch}" == "v0.8" ]];
  then
    local tmp_cling_config
    tmp_cling_config="$(mktemp)"
    # Not every platform supports sed -i and we can't expect sponge to be installed.
    sed "s#\${CMAKE_CURRENT_LIST_DIR}#${cling_dir}/builddir/lib/cmake/cling#" \
        < "${cling_dir}"/builddir/tools/cling/lib/cmake/cling/ClingConfig.cmake \
        > "${tmp_cling_config}"
    mv -f "${tmp_cling_config}" "${cling_dir}"/builddir/tools/cling/lib/cmake/cling/ClingConfig.cmake
  fi
}

fetch_cpt
build_cling
