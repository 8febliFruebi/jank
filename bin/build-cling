#!/usr/bin/env bash

set -euo pipefail

# We build Cling with Clang for consistency.
export CC=clang
export CXX=clang++

make_j="$(nproc || echo 4)"

while getopts ":hj:" opt; do
  case "${opt}" in
    h)
      echo "Usage ${0} [-j N] [srcdir]"
      exit 0
      ;;
    j)
      make_j="${OPTARG}"
      ;;
    \?)
      echo "Invalid option: ${OPTARG}" 1>&2
      ;;
    :)
      echo "Invalid option: ${OPTARG} requires an argument" 1>&2
      ;;
  esac
done
shift $((OPTIND -1))

echo "Using ${make_j} cores to build"

srcdir="${PWD}"

# Cling latest
llvm_url="http://root.cern.ch/git/llvm.git"
llvm_branch="cling-patches-rrelease_13"
clang_url="http://root.cern.ch/git/clang.git"
clang_branch="cling-patches-rrelease_13"
cling_url="http://root.cern.ch/git/cling.git"
cling_branch="master"

# $1 == Repo URL
# $2 == Repo branch
# $3 == Path
function shallow_clone()
{ git clone -b "${2}" --depth 1 --shallow-submodules --single-branch "${1}" "${3}"; }

function prepare()
{
  if [ ! -d "$srcdir/llvm" ];
  then
    shallow_clone "${llvm_url}" "${llvm_branch}" "${srcdir}"/llvm
  fi

  if [ ! -d "$srcdir/clang" ];
  then
    shallow_clone "${clang_url}" "${clang_branch}" "${srcdir}"/clang
  fi

  if [ ! -d "$srcdir/cling" ];
  then
    shallow_clone "${cling_url}" "${cling_branch}" "${srcdir}"/cling
  fi

  if [ ! -h "$srcdir/llvm/tools/clang" ];
  then
    ln -sf "$srcdir/clang" "$srcdir/llvm/tools/clang"
  fi

  if [ ! -h "$srcdir/llvm/tools/cling" ];
  then
    ln -sf "$srcdir/cling" "$srcdir/llvm/tools/cling"
  fi
}

function build()
{
  mkdir -p "$srcdir/cling-build"
  cd "$srcdir/cling-build"

  cmake -DCMAKE_BUILD_TYPE=Release \
        -DLLVM_TARGETS_TO_BUILD="host;NVPTX" \
        -DLLVM_BUILD_LLVM_DYLIB=OFF \
        -DLLVM_ENABLE_RTTI=ON \
        -DLLVM_ENABLE_FFI=ON \
        -DLLVM_BUILD_DOCS=OFF \
        -DLLVM_ENABLE_SPHINX=OFF \
        -DLLVM_ENABLE_DOXYGEN=OFF \
        -DLLVM_ENABLE_LIBCXX=OFF \
        -DFFI_INCLUDE_DIR="$(pkg-config --cflags-only-I libffi | cut -c3-)" \
        -DCLING_CXX_HEADERS=ON \
        "$srcdir/llvm"

  make -j"${make_j}" -C tools/clang
  make -j"${make_j}" -C tools/cling
}

prepare
build
