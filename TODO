refactoring
  expect state

REPL
  add repl trait and compile separate lib
    allow multiple definitions
  online repl sandbox

"falsey" is not a valid ident!!!

closures
  explicitly copy from scope? this may be messy

test
  function referencing
    ambiguous error
  function binding
  calling from binding
  calling from indirect binding
    native and non-native
  closures (returning closures)
    need to copy captures
  ƒ as a function type
  generics
    type matching
  Ɐ as auto

start with cons and lambdas
  list
  map
  filter
  reduce

custom types are dynamically allocated by default
  traits to control allocation? (later)
  reference counted a la shared_ptr
  copied on mutation
  explicit copy function as well

allow comments anywhere in forms

operators
  !=
  logical or, and, not, etc

stdlib
  print print-line format
  not and or
  even? odd?
  map, reduce, filter
  vector
  list
  map
  tuple

null
  allow null-typed bindings

syntax errors...?
  will the regex remain?
    need to map s-exprs to file positions

variadic generics
  working with parameter packs

Maybes?
  pattern matching
    replace car, cdr, cond, eq, atom
