write the extra compilation args to a file

better logging
  timbre (allows profiling, too)

sanitize idents which are keywords in backend language

returning an integer literal and a jank integer is conflicting
  specify types for if statement returns

test passing first class overloaded declared functions

this should work, but print! doesn't like the ∀
  (print! ((λ (i integer) (∀) i) 77))

remove function-call from grammar; just use lists
  it becomes unhelpful with macros

tests
  declarations
  comments within forms
    including functions
  keywords
  per-commit performance?
    criterium benchmarking
  codegen
  code execution (functional tests)

targets
  each target has its own prelude
    c++
    bash
    opencl
    nix

  (#target c++
           (#dependencies "gl/gl.h")
           (#command-line "-ggdb -Og -lGL"))

  prelude isn't included until #target macro is used

allow keywords?
  each keyword is its own type
  useful in the case of policies?

^type within macros for first class types
  maybe no need for generic syntax?

constraints on return types
  Allow dependent types there
  (ƒ foo () (:T-ret) where (^number? : (T-ret))
    42)

REPL
  online repl sandbox
  irc bot for #jank
  tests for repl
