refactoring
  expect state

allow keywords?
  each keyword is its own type
  useful in the case of policies?

REPL
  add repl trait and compile separate lib
    allow multiple definitions
  online repl sandbox

"falsey" is not a valid ident!!!

auto deduction of null return is failing

closures
  explicitly copy from scope? this may be messy

remove named function referencing
  it's of limited use

test
  call from direct binding

start with cons and lambdas
  list
  map
  filter
  reduce

custom types are dynamically allocated by default
  traits to control allocation? (later)
  reference counted a la shared_ptr
  copied on mutation
  explicit copy function as well

allow comments anywhere in forms

operators
  !=
  logical or, and, not, etc

stdlib
  print print-line format
  not and or
  even? odd?
  map, reduce, filter
  vector
  list
  map
  tuple

null
  allow null-typed bindings

syntax errors...?
  will the regex remain?
    need to map s-exprs to file positions

variadic generics
  working with parameter packs

Maybes?
  pattern matching
    replace car, cdr, cond, eq, atom
