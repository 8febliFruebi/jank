impl:
  declarations first
    prelude to setup types and functions
    macros
      declare-type declare-function declare-binding

  function type deduction
  implicit function returns
    if statements, too
  remove return statement entirely

  when type checking
    keep track of whether or not the expression is an argument
    if expressions need extra type checking as arguments
      both then and else are needed and must be of the same type

  nested functions need to be lambdas in codegen

  better logging
    timbre (allows profiling, too)

  tests
    decls
    comments within forms
    keywords
    per-commit performance?
      criterium benchmarking
    migrate old tests
      move parsing tests in old "translate" into parse/
      change typed tests to use declare instead of ƒ
        the ƒ macro does nothing right now

design:
  functions
    binding + lambda
    declaration based
      read the decl and keep a future to the definition
      auto return types will need to block on the future
    always generic
      function can be a macro for not specifying generics
      generic-function is the default

  bindings
    declaration based (with futures)

  declarations of bindings and functions

  no interpreter outside of macros
    jump right into outputting C++14

  RAII
    shared_ptrs
